import type { NextPage } from "next";
import Head from "next/head";
import parse from "node-html-parser";
import React from "react";
import dynamic from "next/dynamic";
import useDebounce from "~/hooks/useDebounce";

const HeatMapView = dynamic(() => import("~/components/HeatMapView"), {
  ssr: true,
});

const Home: NextPage = ({ out }: any) => {
  const [length, setLength] = React.useState(10);

  const debouncedLength = useDebounce(length, 500);
  const total = React.useMemo(() => {
    return out.reduce(
      (acc: any, cur: any) => {
        acc.sellAmount = acc.sellAmount + cur.totSellamnt;
        acc.winnerCount = acc.winnerCount + cur.firstPrzwnerCo;
        acc.firstWinAmount = acc.firstWinAmount + cur.firstWinamnt;
        return acc;
      },
      {
        sellAmount: 0,
        winnerCount: 0,
        firstWinAmount: 0,
      }
    );
  }, [out]);

  const top10 = React.useMemo(() => {
    const copied = [...out];
    return copied.reverse().slice(0, debouncedLength);
  }, [out, debouncedLength]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Total sell amout: {total.sellAmount}</h1>
      <h1>Total winnerCount: {total.winnerCount}</h1>

      <h1>Total firstWinAmount: {total.firstWinAmount}</h1>
      <div>
        <input
          type="range"
          step={1}
          min={10}
          max={1032}
          value={length}
          onChange={(e) => setLength(Number(e.target.value))}
        />
        <span>{length}</span>
      </div>
      {/* <LottoAccMapView /> */}
      <HeatMapView item={top10} />
    </div>
  );
};

export const getStaticProps = async () => {
  const res = await fetch("https://kyun.github.io/lotto_analysis/merge");
  const html = await res.text();
  const root = parse(html);
  const text = root.querySelector("pre")?.text;
  return {
    props: {
      // props for your component
      out: JSON.parse(text ?? "{}"),
    },
  };
};

export default Home;
